{"version":3,"sources":["components/CodeEditor/utils/HighlightRules.ts","components/CodeEditor/CodeEditor.tsx","components/Navbar/Navbar.tsx","components/OutputViewer/Viewers/AstViewer/AstViewer.tsx","components/OutputViewer/Viewers/ErrorViewer/ErrorViewer.tsx","components/OutputViewer/OutputViewer.tsx","compiler/Token/TokenType.ts","compiler/Token/Token.ts","compiler/Parser/Parser.ts","compiler/Scanner/Scanner.ts","compiler/Tables/ErrorTable.ts","compiler/Tables/SymbolTable.ts","compiler/Compiler.ts","components/Loader/Loader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomHighlightRules","$rules","start","token","regex","ace","require","TextHighlightRules","CustomSyntaxMode","HighlightRules","Mode","CodeEditor","props","refEditor","React","useRef","useEffect","customMode","current","editor","getSession","setMode","className","ref","placeholder","mode","theme","value","code","onChange","setCode","name","editorProps","$blockScrolling","height","width","options","draggable","edge","Navbar","alignLinks","brand","href","menuIcon","onClick","exec","type","uploadCode","id","htmlFor","last","k","x","y","drag_handler","d3","on","event","boxLimit","dx","dy","this","attr","zoom_handler","transform","console","log","AstViewer","refDiv","margin","nodeData","ast","size","nodes","treemap","i","children","length","removeChild","g","append","selectAll","data","descendants","slice","enter","d","parent","node","style","text","ErrorViewer","errorTable","errors","map","error","message","line","OutputViewer","TokenType","obj","tabsOptions","swipeable","duration","onShow","responsiveThreshold","Infinity","symbolTable","padding","title","disabled","JSON","stringify","idx","Token","end","TreeNode","Parser","input","currentToken","currentSubTree","reverse","pop","eof","curr","push","next","add","val","accept","prog","subtree1","dcls","subtree2","stmts","expect","dcltree","dcl","dclstree","floatdcl","intdcl","stmtree","stmt","stmtstree","idtree","assign","expr","print","inum","fnum","plus","minus","LexItem","tokenType","Scanner","lexDefinition","blank","newline","output","key","currentLine","test","errorLength","errorString","escapeToken","substr","errorToken","ErrorItem","item","toString","ErrorTable","sort","a","b","compareTo","str","Symbol","SymbolTable","Compiler","tokens","run","Loader","active","color","flashing","App","useState","loading","setLoading","setSymbolTable","setErrorTable","setAst","cmp","e","fr","FileReader","onloadend","result","readAsText","target","files","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e2008e3.chunk.js","sourcesContent":["import \"ace-builds/src-noconflict/mode-java\";\nimport ace from \"ace-builds\"\n\nexport class CustomHighlightRules extends ace.require(\n  \"ace/mode/text_highlight_rules\"\n).TextHighlightRules {\n\n  constructor() {\n    super();\n    this.$rules = {\n      start: [\n        {\n          token: \"keyword\", // declarations\n          regex: \"(f|i|p)\"\n        },\n        {\n          token: \"constant.language.boolean\", // id\n          regex: /([a-e]|[g-h]|[j-o]|[q-z]){1}/\n        },\n        {\n          token: \"constant.numeric\", // float\n          regex: /[0-9]+\\.[0-9]+/\n        },\n        {\n          token: \"constant.numeric\", // int\n          regex: /[0-9]+/\n        },\n        {\n          token: \"string\",\n          regex: /(=|\\+|-){1}/\n        }\n      ]\n    };\n  }\n}\n\nexport default class CustomSyntaxMode extends ace.require(\"ace/mode/java\")\n  .Mode {\n  constructor() {\n    super();\n    this.HighlightRules = CustomHighlightRules;\n  }\n}","import React from 'react';\nimport './CodeEditor.css';\nimport AceEditor from \"react-ace\";\nimport CustomSyntaxMode from \"./utils/HighlightRules\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\ninterface CodeEditorProps {\n  code: string, setCode: any\n}\n\nfunction CodeEditor(props: CodeEditorProps) {\n  const refEditor = React.useRef<AceEditor>(null);\n  React.useEffect(() => {\n    const customMode = new CustomSyntaxMode();\n    if (refEditor.current != null) {\n      refEditor.current.editor.getSession().setMode(customMode as any);\n    }\n  })\n  return (\n    <div className=\"CodeEditor\">\n      <AceEditor\n        ref={refEditor}\n        placeholder=\"Please enter your code! :)\"\n        mode=\"javascript\"\n        theme=\"monokai\"\n        value={props.code}\n        onChange={value => props.setCode(value)}\n        name=\"editor\"\n        editorProps={{ $blockScrolling: true }}\n        height=\"100%\"\n        width=\"100%\"\n      />\n    </div>\n  );\n}\n\nexport default CodeEditor;\n","import React from 'react';\nimport './Navbar.scss';\nimport { Navbar as Nav, NavItem, Icon, NavbarAlignment } from 'react-materialize';\n\nconst options = {\n    draggable: true,\n    edge: \"left\" as NavbarAlignment\n}\n\ninterface NavbarProps {\n    exec: any, uploadCode: any\n}\n\nfunction Navbar(props: NavbarProps) {\n    return (\n        <Nav\n            alignLinks=\"right\"\n            brand={<a href=\"#\">Simple Addition Calculator</a>}\n            menuIcon={<Icon>menu</Icon>}\n            options={options}\n            className=\"Navbar\"\n        >\n            <NavItem href=\"#\" onClick={props.exec}>\n                <Icon>refresh</Icon>\n            </NavItem>\n            <NavItem href=\"#\">\n                <input type=\"file\" onChange={props.uploadCode} id=\"file_upload\" />\n                <label htmlFor=\"file_upload\"><Icon>cloud_upload</Icon></label>\n            </NavItem>\n        </Nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport \"./AstViewer.scss\";\n\ninterface AstViwerProps {\n  ast: string;\n}\n\nlet last = { k: 1, x: 0, y: 40 }\n\nconst drag_handler = d3.drag()\n  .on(\"drag\", function (event: any) {\n    const boxLimit = 2000 * last.k;\n    if (last.x < boxLimit && last.x > -boxLimit || (last.x >= boxLimit && event.dx < 0) || (last.x <= -boxLimit && event.dx > 0)) {\n      last.x += event.dx\n    }\n    else {\n      last.x = last.x > 0 ? boxLimit : -boxLimit;\n    }\n    if (last.y < boxLimit && last.y > -boxLimit || (last.y >= boxLimit && event.dy < 0) || (last.y <= -boxLimit && event.dy > 0)) {\n      last.y += event.dy\n    }\n    else {\n      last.y = last.y > 0 ? boxLimit : -boxLimit;\n    }\n    d3.select(this)\n      .attr(\"transform\",\n        \"translate(\" + last.x + \",\" + last.y + \") scale(\" + last.k + \")\");\n  });\n\nconst zoom_handler = d3.zoom()\n  .on(\"zoom\", function ({ transform }) {\n    console.log(last)\n    last.k = transform.k;\n    d3.select(this)\n      .attr(\"transform\",\n        \"translate(\" + last.x + \",\" + last.y + \") scale(\" + last.k + \")\");\n    console.log(last)\n  })\n\nfunction AstViewer(props: AstViwerProps) {\n  const refDiv = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    last = { k: 1, x: 0, y: 40 }\n    const margin = { top: 40, right: 0, bottom: 0, left: 0 };\n    const nodeData = d3.hierarchy(props.ast)\n    const size = { x: nodeData.height * 150, y: nodeData.height * 100 };\n    const treemap = d3.tree().size([size.x, size.y])\n    const nodes = treemap(nodeData);\n    if (refDiv.current != null) {\n      for (let i = 0; i < refDiv.current.children.length; i++) {\n        refDiv.current.removeChild(refDiv.current.children[i])\n      }\n      let svg = d3.select(refDiv.current).append(\"svg\").attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n      let g = svg.append(\"g\").attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .attr(\"cursor\", \"grab\");\n\n      g.append(\"rect\")\n        .attr(\"x\", \"-2000\")\n        .attr(\"y\", \"-2000\")\n        .attr(\"width\", \"5000\")\n        .attr(\"height\", \"5000\")\n        .attr(\"fill\", \"#fafafa\")\n        .attr(\"stroke\", \"black\")\n\n      g.selectAll(\".link\")\n        .data(nodes.descendants().slice(1))\n        .enter().append(\"path\")\n        .attr(\"class\", \"link\")\n        .attr(\"d\", d => \"M\" + d.x + \",\" + d.y\n          + \"L\" + d.parent!.x + \",\" + d.parent!.y);\n\n      // adds each node as a group\n      let node = g.selectAll(\".node\")\n        .data(nodes.descendants())\n        .enter().append(\"g\")\n        .attr(\"class\", function (d) {\n          return \"node\" +\n            (d.children ? \" node--internal\" : \" node--leaf\");\n        })\n        .attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \")\");\n\n      // adds the circle to the node\n      node.append(\"circle\")\n        .attr(\"r\", 10);\n\n      // adds the text to the node\n      node.append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"y\", d => d.children ? -20 : 20)\n        .style(\"text-anchor\", \"middle\")\n        .text((d: any) => d.data.name);\n\n      drag_handler(g as any);\n      zoom_handler(g as any);\n\n    }\n  }\n  )\n\n  return (\n    <div ref={refDiv} style={{ height: \"100%\" }}>\n\n    </div>\n  )\n\n}\n\nexport default AstViewer","import React from 'react';\nimport { Collection, CollectionItem, Icon } from 'react-materialize';\nimport ErrorTable from '../../../../compiler/Tables/ErrorTable';\n\ninterface ErrorViewerProps {\n  errorTable: ErrorTable,\n}\n\nfunction ErrorViewer(props: ErrorViewerProps) {\n\n  return (\n    <Collection>\n      {props.errorTable.errors.map(error => (\n        <CollectionItem>\n          <span className=\"title\">\n            <b>{error.message}</b>\n          </span>\n          <p style={{ margin: 0 }}>\n            <b>Line: </b> {error.token.line}\n            <br />\n            <b>Start: </b> {error.token.start}\n            <br />\n            <b>Value: </b> {error.token.data}\n          </p>\n        </CollectionItem>\n      ))}\n      {props.errorTable.length == 0 && (\n        <CollectionItem >\n          <span className=\"title\">\n            <b>No errors!</b>\n          </span>\n        </CollectionItem>\n      )}\n    </Collection >\n  )\n}\n\nexport default ErrorViewer;","import React from 'react';\nimport './OutputViewer.scss'\nimport { Tabs, Tab } from 'react-materialize';\nimport ErrorTable from '../../compiler/Tables/ErrorTable';\nimport SymbolTable from '../../compiler/Tables/SymbolTable';\nimport AstViewer from './Viewers/AstViewer/AstViewer';\nimport ErrorViewer from './Viewers/ErrorViewer/ErrorViewer';\n\ninterface OutputViewerProps {\n  ast: any,\n  errorTable: ErrorTable | null,\n  symbolTable: SymbolTable | null\n}\n\nfunction OutputViewer(props: OutputViewerProps) {\n  const prettyObject = (obj: any) => {\n    return JSON.stringify(obj, null, 2);\n  }\n  const tabsOptions = { swipeable: false, duration: 300, onShow: () => { }, responsiveThreshold: Infinity };\n  const display = props.errorTable != null && props.symbolTable != null;\n  if (display) {\n    const errors = props.errorTable!.length != 0;\n    return (\n      <div className=\"row OutputViewer\" >\n        <div className=\"col s12\" style={{ padding: 0, margin: 0 }}>\n          <Tabs options={tabsOptions}>\n            <Tab title=\"Error/warnings\">\n              <ErrorViewer errorTable={props.errorTable!} />\n            </Tab>\n            {/* <Tab title=\"Symbol table\" disabled={errors}>\n              <pre>{prettyObject(props.symbolTable)}</pre>\n            </Tab> */}\n            <Tab title=\"AST JSON\" disabled={errors}>\n              {!errors && <pre>{prettyObject(props.ast)}</pre>}\n            </Tab>\n            <Tab title=\"AST Viewer\" disabled={errors} idx=\"asdf\">\n              {!errors && <AstViewer ast={props.ast} />}\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row OutputViewer\" >\n      <div className=\"col s12\" style={{ padding: 0, margin: 0 }}>\n        <Tabs options={tabsOptions}>\n          <Tab title=\"Instructions\">\n            Code to the left, execute on the top, output in this tabs\n      </Tab>\n        </Tabs>\n      </div>\n    </div>)\n\n}\n\nexport default OutputViewer;\n","enum TokenType {\n  floatdcl, intdcl, print, id, assign, plus, minus, inum, fnum, blank, error, newline, eof\n}\n\nexport default TokenType;","import TokenType from './TokenType';\n\nclass Token {\n  type: TokenType;\n  data: string;\n  start: number;\n  end: number;\n  line: number;\n\n  constructor(type: TokenType, data: string, start: number, end: number, line: number) {\n    this.type = type;\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n  }\n\n  toString(): string {\n    return `Token {type: ${TokenType[this.type]} data: ${this.data} start: ${this.start} end: ${this.end} line: ${this.line}}`\n  }\n}\n\nexport default Token;","import TokenType from '../Token/TokenType';\nimport Token from '../Token/Token';\nimport ErrorTable from '../Tables/ErrorTable';\nimport SymbolTable from '../Tables/SymbolTable';\n\nclass TreeNode {\n  name: string;\n  children: Array<any> = [];\n  constructor(name: string) { this.name = name; }\n}\n\nclass Parser {\n\n  input: Array<Token>;\n  currentToken: Token;\n  symbolTable: SymbolTable;\n  errorTable: ErrorTable;\n  currentSubTree: any;\n\n  constructor(input: Array<Token>, symbolTable: SymbolTable, errorTable: ErrorTable) {\n    this.input = input.reverse();\n    this.currentToken = this.input.pop() || new Token(TokenType.eof, \"\", 0, 0, 0);\n    this.symbolTable = symbolTable;\n    this.errorTable = errorTable;\n    this.currentSubTree = null;\n  }\n\n  next(): void {\n    this.currentToken = this.input.pop()!;\n  }\n\n  accept(type: TokenType): TreeNode | null {\n    if (this.currentToken.type == type) {\n      const curr = new TreeNode(TokenType[type]);\n      curr.children.push(new TreeNode(this.currentToken.data))\n      this.next();\n      return curr;\n    }\n    return null;\n  }\n\n  error(message: string) {\n    this.errorTable.add(this.currentToken, message + \" but got: \" + this.currentToken.data);\n  }\n\n  expect(type: TokenType): TreeNode | null {\n    const val = this.accept(type)\n    if (val != null) {\n      return val;\n    }\n    this.error(\"Expecting token: \" + TokenType[type]);\n    return null;\n  }\n\n  // TODO: return the tree representation\n  run(): any {\n    return this.prog();\n  }\n\n  prog(): any {\n    let subtree1 = this.dcls();\n    let subtree2 = this.stmts();\n    this.expect(TokenType.eof);\n    let node = new TreeNode(\"Prog\");\n    node.children.push(subtree1, subtree2, new TreeNode(\"$\"))\n    return node;\n  }\n\n  dcls(): any {\n    let dcltree = this.dcl();\n    if (dcltree == null) {\n      return new TreeNode(\"λ\");\n    }\n    let dclstree = this.dcls()\n    let node = new TreeNode(\"Dcls\")\n    node.children.push(dcltree, dclstree);\n    return node;\n  }\n\n  dcl(): any {\n    let val = this.accept(TokenType.floatdcl)\n    let node = new TreeNode(\"Dcl\")\n    if (val != null) {\n      node.children.push(val, this.expect(TokenType.id))\n      return node\n    }\n    val = this.accept(TokenType.intdcl)\n    if (val != null) {\n      node.children.push(val, this.expect(TokenType.id))\n      return node\n    }\n    return null;\n  }\n\n  stmts(): any {\n    let stmtree = this.stmt();\n    if (stmtree == null) {\n      return new TreeNode(\"λ\");\n    }\n    let stmtstree = this.stmts()\n    let node = new TreeNode(\"Stmts\")\n    node.children.push(stmtree, stmtstree);\n    return node;\n  }\n\n  stmt(): any {\n    let node = new TreeNode(\"Stmt\")\n    let idtree = this.accept(TokenType.id)\n    if (idtree != null) {\n      let assign = this.expect(TokenType.assign);\n      if (assign != null) {\n        let val = this.val();\n        if (val != null) {\n          let expr = this.expr();\n          node.children.push(idtree, assign, val, expr);\n          return node\n        }\n      }\n    }\n    let print = this.accept(TokenType.print)\n    let id = this.accept(TokenType.id);\n    if (print != null || id != null) {\n      node.children.push(print, id)\n      return node\n    }\n    return null;\n  }\n\n  val(): any {\n    let id = this.accept(TokenType.id);\n    let inum = this.accept(TokenType.inum);\n    let fnum = this.accept(TokenType.fnum)\n    let node = new TreeNode(\"Val\")\n    if (id != null) {\n      node.children.push(id)\n      return node;\n    }\n    if (inum != null) {\n      node.children.push(inum)\n      return node;\n    }\n    if (fnum != null) {\n      node.children.push(fnum)\n      return node;\n    }\n    this.error(\"Expecting a value (id, integer, float)\");\n    return null;\n  }\n\n  expr(): any {\n    let plus = this.accept(TokenType.plus)\n    let minus = this.accept(TokenType.minus)\n    let node = new TreeNode(\"Expr\")\n    if (plus != null) {\n      node.children.push(plus, this.val(), this.expr())\n      return node;\n    }\n    if (minus != null) {\n      node.children.push(minus, this.val(), this.expr())\n      return node;\n    }\n    return new TreeNode(\"λ\");\n  }\n}\n\nexport default Parser;","import TokenType from '../Token/TokenType';\nimport Token from '../Token/Token';\nimport ErrorTable from '../Tables/ErrorTable';\nimport SymbolTable from '../Tables/SymbolTable';\n\nclass LexItem {\n  regex;\n  tokenType;\n  constructor(regex: RegExp, tokenType: TokenType) {\n    this.regex = regex;\n    this.tokenType = tokenType;\n  }\n}\n\nclass Scanner {\n  input: string\n  symbolTable: SymbolTable\n  errorTable: ErrorTable;\n\n  lexDefinition: { [key: string]: LexItem } = {\n    \"floatDcl\": new LexItem(/^f/, TokenType.floatdcl),\n    \"intDcl\": new LexItem(/^i/, TokenType.intdcl),\n    \"print\": new LexItem(/^p/, TokenType.print),\n    \"id\": new LexItem(/^([a-e]|[g-h]|[j-o]|[q-z])/, TokenType.id),\n    \"assign\": new LexItem(/^=/, TokenType.assign),\n    \"plus\": new LexItem(/^\\+/, TokenType.plus),\n    \"minus\": new LexItem(/^-/, TokenType.minus),\n    \"fNum\": new LexItem(/^[0-9]+\\.[0-9]+/, TokenType.fnum),\n    \"iNum\": new LexItem(/^[0-9]+/, TokenType.inum),\n    \"blank\": new LexItem(/^( |\\t)+/, TokenType.blank),\n    \"newLine\": new LexItem(/^(\\r\\n|\\n|\\r)/, TokenType.newline),\n  }\n\n  output: Array<Token> = [];\n\n  constructor(input: string, symbolTable: SymbolTable, errorTable: ErrorTable) {\n    this.input = input;\n    this.symbolTable = symbolTable;\n    this.errorTable = errorTable;\n  }\n\n  test(input: string, start: number, line: number): Token | null {\n    for (let key in this.lexDefinition) {\n      let value = this.lexDefinition[key].regex.exec(input);\n      if (value != null) {\n        return new Token(this.lexDefinition[key].tokenType, value[0], start, start + value[0].length, line)\n      }\n    }\n    return null;\n  }\n\n  run(): Array<Token> {\n    let length = 0;\n    let data = this.input;\n    let error = false;\n    let start = 0;\n    let currentLine = 0;\n    while (data.length > 0) {\n      let token = this.test(data, start, currentLine)\n      if (token == null) {\n        error = true;\n        let errorLength = 0;\n        let errorString = \"\";\n        let escapeToken = null;\n        do {\n          errorLength += 1;\n          errorString += data[0];\n          start += 1\n          data = data.substr(1);\n          escapeToken = this.test(data, start, currentLine)\n        } while (escapeToken == null && data.length > 0);\n        const errorToken = new Token(TokenType.error, errorString, start - errorLength, start, currentLine);\n        this.errorTable.add(errorToken, \"Token: \\\"\" + errorString + \"\\\" not recognized\");\n        token = escapeToken;\n        this.output.push(errorToken)\n      }\n      else {\n        data = data.substr(token.data.length);\n        start += token.data.length;\n        if (token.type == TokenType.newline) {\n          currentLine += 1\n          start = 0\n        }\n        else if (token.type != TokenType.blank) {\n          this.output.push(token);\n        }\n      }\n\n    }\n    this.output.push(new Token(TokenType.eof, \"\", start, start, currentLine));\n    return this.output;\n  }\n}\n\nexport default Scanner;","import Token from '../Token/Token';\n\nclass ErrorItem {\n  token: Token\n  message: string\n  constructor(token: Token, message: string) {\n    this.token = token;\n    this.message = message;\n  }\n  compareTo(item: ErrorItem): number {\n    if (this.token.line < item.token.line && this.token.start < item.token.start) {\n      return -1;\n    }\n    else if (this.token.line == item.token.line && this.token.start == item.token.start) {\n      return 0;\n    }\n    return 1;\n  }\n  toString(): string {\n    return \"Token: \" + this.token.toString() + \" Message: \" + this.message\n  }\n}\n\nclass ErrorTable {\n  errors: Array<ErrorItem> = [];\n  length: number = 0;\n\n  add(token: Token, message: string) {\n    this.errors.push(new ErrorItem(token, message));\n    this.length += 1;\n  }\n  sort() {\n    this.errors.sort((a, b) => a.compareTo(b))\n  }\n\n  toString(): string {\n    if (this.length == 0) {\n      return \"No errors!\"\n    }\n    let str = `ErrorTable { \\n\\tlength: ${this.length}\\n\\terrors:`\n    for (let i = 0; i < this.errors.length; i++) {\n      str += `\\n\\t\\t ${this.errors[i].toString()}`\n    }\n    return str + \"\\n }\"\n  }\n\n}\n\nexport default ErrorTable;","import Token from '../Token/Token';\n\nclass Symbol {\n  name: string\n  token: Token\n  value: any\n\n  constructor(name: string, token: Token, value: any) {\n    this.name = name;\n    this.token = token;\n    this.value = value;\n  }\n}\n\nclass SymbolTable {\n  data: { [key: string]: Symbol } = {}\n\n  setValue(key: string, value: Symbol) {\n    this.data[key] = value;\n  }\n\n  set(name: string, token: Token, value: any) {\n    this.data[name] = new Symbol(name, token, value);\n  }\n\n  get(key: string) {\n    return this.data[key];\n  }\n}\n\nexport default SymbolTable;","import Parser from './Parser/Parser'\nimport Scanner from './Scanner/Scanner'\nimport ErrorTable from './Tables/ErrorTable';\nimport SymbolTable from './Tables/SymbolTable';\n\nclass Compiler {\n  errorTable: ErrorTable = new ErrorTable();\n  symbolTable: SymbolTable = new SymbolTable();\n  input: string;\n\n  constructor(input: string) {\n    this.input = input;\n  }\n\n  run() {\n    let tokens = new Scanner(this.input, this.symbolTable, this.errorTable).run();\n    let ast = new Parser(tokens, this.symbolTable, this.errorTable).run();\n    return ast;\n  }\n\n}\n\nexport default Compiler;","import React from 'react';\nimport { Preloader } from 'react-materialize';\nimport \"./Loader.scss\"\n\nfunction Loader() {\n  return (\n    <div id=\"Loader\">\n      <Preloader\n        active\n        color=\"blue\"\n        flashing\n      />\n    </div>\n  )\n}\n\nexport default Loader;","import React from 'react';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css'\nimport '../node_modules/materialize-css/dist/js/materialize.min.js'\nimport './App.scss';\nimport CodeEditor from './components/CodeEditor/CodeEditor';\nimport Navbar from './components/Navbar/Navbar';\nimport OutputViewer from './components/OutputViewer/OutputViewer';\nimport Compiler from './compiler/Compiler';\nimport SymbolTable from './compiler/Tables/SymbolTable';\nimport ErrorTable from './compiler/Tables/ErrorTable';\nimport Loader from './components/Loader/Loader';\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false);\n  const [code, setCode] = React.useState<string>(\"fbiaa=5b=a+3.2pba=5959595+3.2-b\");\n  const [symbolTable, setSymbolTable] = React.useState<SymbolTable | null>(null)\n  const [errorTable, setErrorTable] = React.useState<ErrorTable | null>(null)\n  const [ast, setAst] = React.useState<any>();\n\n  const exec = () => {\n    setLoading(true);\n    const cmp = new Compiler(code);\n    const output = cmp.run();\n    setAst(output);\n    setErrorTable(cmp.errorTable);\n    setSymbolTable(cmp.symbolTable);\n    setLoading(false);\n  }\n\n  const upload = (e: any) => {\n    //  e.target.files[0].type  e.target.files[0].size\n    const fr = new FileReader();\n    fr.onloadend = (e) => {\n      if (fr.result) {\n        setCode(fr.result.toString())\n      }\n      else {\n        setCode(\"\")\n      }\n    }\n    fr.readAsText(e.target.files[0])\n  }\n\n  return (\n    <div className=\"App\">\n      { loading && <Loader />}\n      <Navbar exec={exec} uploadCode={upload} />\n      <div className=\"row\">\n        <div className=\"col s12 m6\"><CodeEditor code={code} setCode={setCode} /></div>\n        <div className=\"col s12 m6\"><OutputViewer ast={ast} errorTable={errorTable} symbolTable={symbolTable} /></div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}